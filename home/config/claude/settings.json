{
  "permissions": {
    "allow": [
      "Bash(atop:*)",
      "Bash(cabal build:*)",
      "Bash(cabal clean:*)",
      "Bash(cabal haddock:*)",
      "Bash(cabal help:*)",
      "Bash(cabal info:*)",
      "Bash(cabal list:*)",
      "Bash(cabal repl:*)",
      "Bash(cabal run:*)",
      "Bash(cabal test:*)",
      "Bash(cabal update:*)",
      "Bash(cabal-fmt:*)",
      "Bash(cabal-gild:*)",
      "Bash(cargo add:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(coredumpctl:*)",
      "Bash(diff:*)",
      "Bash(direnv:*)",
      "Bash(docker --help:*)",
      "Bash(docker --version:*)",
      "Bash(docker build:*)",
      "Bash(docker buildx bake:*)",
      "Bash(docker buildx build:*)",
      "Bash(docker buildx create:*)",
      "Bash(docker buildx du:*)",
      "Bash(docker buildx history:*)",
      "Bash(docker buildx inspect:*)",
      "Bash(docker buildx ls:*)",
      "Bash(docker buildx version:*)",
      "Bash(docker compose build:*)",
      "Bash(docker compose config:*)",
      "Bash(docker compose create:*)",
      "Bash(docker compose down:*)",
      "Bash(docker compose events:*)",
      "Bash(docker compose exec:*)",
      "Bash(docker compose images:*)",
      "Bash(docker compose kill:*)",
      "Bash(docker compose logs:*)",
      "Bash(docker compose ls:*)",
      "Bash(docker compose pause:*)",
      "Bash(docker compose port:*)",
      "Bash(docker compose ps:*)",
      "Bash(docker compose pull:*)",
      "Bash(docker compose restart:*)",
      "Bash(docker compose run:*)",
      "Bash(docker compose scale:*)",
      "Bash(docker compose start:*)",
      "Bash(docker compose stats:*)",
      "Bash(docker compose stop:*)",
      "Bash(docker compose top:*)",
      "Bash(docker compose unpause:*)",
      "Bash(docker compose up:*)",
      "Bash(docker compose version:*)",
      "Bash(docker container diff:*)",
      "Bash(docker container inspect:*)",
      "Bash(docker container logs:*)",
      "Bash(docker container ls:*)",
      "Bash(docker container port:*)",
      "Bash(docker container prune:*)",
      "Bash(docker container stats:*)",
      "Bash(docker container top:*)",
      "Bash(docker context ls:*)",
      "Bash(docker context show:*)",
      "Bash(docker cp:*)",
      "Bash(docker create:*)",
      "Bash(docker diff:*)",
      "Bash(docker events:*)",
      "Bash(docker exec:*)",
      "Bash(docker history:*)",
      "Bash(docker image history:*)",
      "Bash(docker image inspect:*)",
      "Bash(docker image ls:*)",
      "Bash(docker images:*)",
      "Bash(docker import:*)",
      "Bash(docker info:*)",
      "Bash(docker inspect:*)",
      "Bash(docker kill:*)",
      "Bash(docker load:*)",
      "Bash(docker logs:*)",
      "Bash(docker manifest inspect:*)",
      "Bash(docker network inspect:*)",
      "Bash(docker network ls:*)",
      "Bash(docker pause:*)",
      "Bash(docker plugin inspect:*)",
      "Bash(docker plugin ls:*)",
      "Bash(docker port:*)",
      "Bash(docker ps:*)",
      "Bash(docker pull:*)",
      "Bash(docker restart:*)",
      "Bash(docker run:*)",
      "Bash(docker save:*)",
      "Bash(docker search:*)",
      "Bash(docker start:*)",
      "Bash(docker stats:*)",
      "Bash(docker stop:*)",
      "Bash(docker system df:*)",
      "Bash(docker system info:*)",
      "Bash(docker tag:*)",
      "Bash(docker top:*)",
      "Bash(docker unpause:*)",
      "Bash(docker version:*)",
      "Bash(docker volume inspect:*)",
      "Bash(docker volume ls:*)",
      "Bash(echo:*)",
      "Bash(env)",
      "Bash(fd:*)",
      "Bash(find:*)",
      "Bash(gh config get:*)",
      "Bash(gh config list:*)",
      "Bash(gh copilot explain:*)",
      "Bash(gh copilot suggest:*)",
      "Bash(gh extension list:*)",
      "Bash(gh extension search:*)",
      "Bash(gh gist clone:*)",
      "Bash(gh gist list:*)",
      "Bash(gh gist view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue status:*)",
      "Bash(gh issue view:*)",
      "Bash(gh label clone:*)",
      "Bash(gh label list:*)",
      "Bash(gh org list:*)",
      "Bash(gh pr checkout:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr status:*)",
      "Bash(gh pr view:*)",
      "Bash(gh project field-list:*)",
      "Bash(gh project item-list:*)",
      "Bash(gh project list:*)",
      "Bash(gh project view:*)",
      "Bash(gh release download:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(gh repo clone:*)",
      "Bash(gh repo license:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo view:*)",
      "Bash(gh ruleset check:*)",
      "Bash(gh ruleset list:*)",
      "Bash(gh ruleset view:*)",
      "Bash(gh run download:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh search:*)",
      "Bash(gh status:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow view:*)",
      "Bash(ghc-pkg describe:*)",
      "Bash(ghc-pkg field:*)",
      "Bash(ghci:*)",
      "Bash(git add:*)",
      "Bash(git clone:*)",
      "Bash(git diff:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git status:*)",
      "Bash(git switch:*)",
      "Bash(grep:*)",
      "Bash(hadolint:*)",
      "Bash(hlint:*)",
      "Bash(hostname)",
      "Bash(hostnamectl status:*)",
      "Bash(iostat:*)",
      "Bash(iotop:*)",
      "Bash(journalctl:*)",
      "Bash(jq:*)",
      "Bash(localectl status:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(nix build:*)",
      "Bash(nix develop:*)",
      "Bash(nix eval:*)",
      "Bash(nix flake check:*)",
      "Bash(nix flake info:*)",
      "Bash(nix flake metadata:*)",
      "Bash(nix flake prefetch:*)",
      "Bash(nix flake show:*)",
      "Bash(nix fmt:*)",
      "Bash(nix hash:*)",
      "Bash(nix log:*)",
      "Bash(nix path-info:*)",
      "Bash(nix search:*)",
      "Bash(nix shell:*)",
      "Bash(nix why-depends:*)",
      "Bash(nix-diff:*)",
      "Bash(nix-prefetch-git:*)",
      "Bash(nix-prefetch-url:*)",
      "Bash(nixos-option:*)",
      "Bash(readlink:*)",
      "Bash(rg:*)",
      "Bash(stack bench:*)",
      "Bash(stack build:*)",
      "Bash(stack clean:*)",
      "Bash(stack dot:*)",
      "Bash(stack exec:*)",
      "Bash(stack ghci:*)",
      "Bash(stack haddock:*)",
      "Bash(stack hoogle:*)",
      "Bash(stack list:*)",
      "Bash(stack ls:*)",
      "Bash(stack path:*)",
      "Bash(stack repl:*)",
      "Bash(stack run:*)",
      "Bash(stack test:*)",
      "Bash(systemctl status:*)",
      "Bash(timedatectl status:*)",
      "Bash(top:*)",
      "Bash(touch:*)",
      "Bash(trash:*)",
      "Bash(true)",
      "Bash(yarn fix:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn lint:eslint)",
      "Bash(yarn lint:tsc)",
      "Bash(yarn prettier:*)",
      "WebFetch",
      "WebSearch",
      "mcp__deepwiki__ask_question",
      "mcp__deepwiki__read_wiki_contents",
      "mcp__deepwiki__read_wiki_structure",
      "mcp__nixos__home_manager_info",
      "mcp__nixos__home_manager_options_by_prefix",
      "mcp__nixos__home_manager_search",
      "mcp__nixos__nixos_info",
      "mcp__nixos__nixos_search"
    ],
    "deny": ["Bash(git commit:*)", "Bash(rm:*)", "Bash(head:*)", "Bash(tail:*)"],
    "additionalDirectories": ["~/dotfiles/"],
    "defaultMode": "acceptEdits"
  },
  "statusLine": {
    "type": "command",
    "command": "bash ~/.claude/statusline-command.sh"
  },
  "model": "opus"
}
