#!/bin/bash
set -eux

# ループ終わりにプロジェクトディレクトリに復帰します。
dotfiles_dir=$(realpath $(dirname "$0"))
cd $dotfiles_dir

# 現在のユーザのホームディレクトリに展開します。
home_dir=~

# etc home/userから設定ファイルを取得します。
for f in $(find etc home/user -type f); do
  # 後々正しい相対パスにするために絶対パスを取得しておきます。
  real=$(realpath $f)
  # home/userは~/にマッピングします。
  if [[ $f == home/user* ]]; then
    conf_dir=$(dirname $(echo $f|sed -e "s#home/user#$home_dir#"))
    mkdir -p $conf_dir
    # マウントしても正常にパスが辿れるようにcdして設置する回りくどい方法を取っています。
    cd $conf_dir
    ln -sfv $(realpath --relative-to=. $real) .
  else                          # その他のディレクトリ(今はetcしかないが)はフルパスをマッピングします。
    conf_dir=/$(dirname $f)
    # etcでの操作にはroot権限が必要になる。
    sudo mkdir -p $conf_dir
    cd $conf_dir
    sudo ln -sfv $(realpath --relative-to=. $real) .
  fi
  cd $dotfiles_dir
done

# gitの認証情報保存設定をソフトウェアのインストール状態によって変更します。
cd ~/.config/git/

if hash git-credential-libsecret 2>/dev/null; then
  ln -sfv config.local.libsecret config.local
elif [[ -x /mnt/c/Program\ Files/Git/mingw64/libexec/git-core/git-credential-manager-core.exe ]]; then
  ln -sfv config.local.manager-windows-core config.local
elif hash git-credential-manager 2>/dev/null; then
  ln -sfv config.local.manager config.local
else
  # 早めにセットアップして入力不要にしましょう。
  ln -sfv config.local.cache config.local
fi
